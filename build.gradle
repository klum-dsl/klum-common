
buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.9.0"
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
        classpath 'ch.raffael.markdown-doclet:markdown-doclet:1.4'
        classpath "gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.14.0"
        classpath 'com.netflix.nebula:nebula-release-plugin:6.0.0'
        classpath 'com.netflix.nebula:nebula-publishing-plugin:5.1.1'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.15.0'
    }
}

group 'com.blackbuild.klum.common'

apply plugin: 'groovy'
apply plugin: 'jacoco'
apply plugin: 'com.bmuschko.nexus'
apply plugin: 'io.codearte.nexus-staging'
apply plugin: 'nebula.release'
apply plugin: 'ch.raffael.markdown-doclet'
apply plugin: 'license'
apply plugin: 'nebula.maven-publish'
apply plugin: 'com.github.ben-manes.versions'

sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6

repositories {
    mavenCentral()
}

jacoco {
    toolVersion = "0.7.8"
}

dependencies {
    compile "org.codehaus.groovy:groovy-all:${groovyVersion}"
    compile "com.intellij:openapi:7.0.3"
    testCompile("org.spockframework:spock-core:${spockVersion}")
    testRuntime "cglib:cglib-nodep:3.1"          // allows mocking of classes (in addition to interfaces)
    testRuntime "org.objenesis:objenesis:2.1"    // allows mocking of classes without default constructor (together with CGLIB)
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}

nexusStaging {
    packageGroup = "com.blackbuild"
}

modifyPom {
    project {
        name 'KlumCommon'
        packaging 'jar'
        description 'Common classes used by the Klum Suite'
        url 'https://github.com/klum-dsl/klum-common'

        scm {
            connection 'scm:svn:https://github.com/klum-dsl/klum-common.git'
            developerConnection 'scm:svn:https://github.com/klum-dsl/klum-common.git'
            url 'https://github.com/klum-dsl/klum-common'
        }

        licenses {
            license {
                name 'The MIT License (MIT)'
                url 'http://opensource.org/licenses/MIT'
            }
        }

        developers {
            developer {
                id 'pauxus'
                name 'Stephan Pauxberger'
                email 'stephan@blackbuild.com'
            }
        }
    }
}

afterEvaluate {
    // modify dependecies for generated pom
    project.poms*.whenConfigured { pom ->
        pom.dependencies.find { it.artifactId == "groovy-all" }.optional = true
        pom.dependencies.find { it.artifactId == "openapi" }.optional = true
    }
}

tasks.release.dependsOn 'build'
