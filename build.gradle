buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.netflix.nebula:gradle-contacts-plugin:3.0.1'
        classpath 'com.netflix.nebula:nebula-publishing-plugin:5.1.4'
        classpath 'com.netflix.nebula:nebula-release-plugin:6.0.2'
        classpath 'com.netflix.nebula:gradle-info-plugin:3.+'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath 'ch.raffael.markdown-doclet:markdown-doclet:1.4'
        classpath "gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.14.0"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5"
    }
}

apply plugin: 'groovy'
apply plugin: 'java-library'
apply plugin: 'jacoco'
apply plugin: 'nebula.maven-publish'
apply plugin: 'nebula.release'
apply plugin: 'license'
apply plugin: 'nebula.info'
apply plugin: 'nebula.javadoc-jar'
apply plugin: 'nebula.source-jar'
apply plugin: 'nebula.contacts'
apply plugin: 'ch.raffael.markdown-doclet'
apply plugin: 'com.jfrog.bintray'
apply plugin: "org.sonarqube"

description 'Common library with helpers for the KlumSuite'
group 'com.blackbuild.klum.common'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

repositories {
    jcenter()
}

jacoco {
    toolVersion = "0.7.8"
}

configurations.testCompileOnly.extendsFrom configurations.compileOnly

dependencies {
    compile "org.codehaus.groovy:groovy-all:2.4.12"
    compile "com.intellij:openapi:7.0.3"
    testCompile("org.spockframework:spock-core:1.1-groovy-2.4")
    testRuntime "net.bytebuddy:byte-buddy:1.7.5"
    testRuntime "org.objenesis:objenesis:2.6"
}


bintray {
    user = findProperty('bintrayUser')
    key = findProperty('bintrayApiKey')

    publications = ['nebula']
    dryRun = false
    publish = true
    pkg {
        repo = 'klum-dsl'
        userOrg = 'klum-dsl'
        name = project.name
        desc = project.description
        websiteUrl = 'https://github.com/klum-dsl/klum-common'
        issueTrackerUrl = 'https://github.com/klum-dsl/klum-common/issues'
        vcsUrl = 'https://github.com/klum-dsl/klum-common.git'
        licenses = ['MIT']
        labels = ['groovy', 'ast']
        publicDownloadNumbers = true
        attributes = [:]
        version {
            name = project.version
            vcsTag = project.version
            attributes = [:]
            gpg {
                sign = true
                passphrase = findProperty("signing.password")
            }
            mavenCentralSync {
                sync = !version.toString().contains(".dev+")
                user = findProperty("nexusUsername")
                password = findProperty("nexusPassword")
            }
        }
    }
}

contacts {
    'stephan@blackbuild.com' {
        moniker 'Stephan Pauxberger'
        github 'pauxus'
    }
}

publishing {
    publications {
        nebula(MavenPublication) {
            pom.withXml {
                def p = asNode()
                p.dependencies.dependency.find { it.artifactId.text() == "groovy-all" }.appendNode('optional', true)
                p.dependencies.dependency.find { it.artifactId.text() == "openapi" }.appendNode('optional', true)
                p.name.first().setValue('KlumCommon')
                p.appendNode('licenses').appendNode('license').
                        appendNode('name', 'The MIT License (MIT)').parent().
                        appendNode('url', 'http://opensource.org/licenses/MIT')
            }
        }
    }
}

tasks.release.dependsOn 'build'
tasks.postRelease.dependsOn 'publish'